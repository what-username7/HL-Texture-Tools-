//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HLTextureTools.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HLTextureTools.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap _11 {
            get {
                object obj = ResourceManager.GetObject("11", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap add {
            get {
                object obj = ResourceManager.GetObject("add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap application_view_tile {
            get {
                object obj = ResourceManager.GetObject("application_view_tile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap arrow_down {
            get {
                object obj = ResourceManager.GetObject("arrow_down", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap arrow_up {
            get {
                object obj = ResourceManager.GetObject("arrow_up", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap avail_sprays {
            get {
                object obj = ResourceManager.GetObject("avail_sprays", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap control_play_blue {
            get {
                object obj = ResourceManager.GetObject("control_play_blue", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap control_stop_blue {
            get {
                object obj = ResourceManager.GetObject("control_stop_blue", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap delete {
            get {
                object obj = ResourceManager.GetObject("delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder_export {
            get {
                object obj = ResourceManager.GetObject("folder_export", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder_import {
            get {
                object obj = ResourceManager.GetObject("folder_import", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap folder_picture {
            get {
                object obj = ResourceManager.GetObject("folder_picture", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap page_copy {
            get {
                object obj = ResourceManager.GetObject("page_copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap palette {
            get {
                object obj = ResourceManager.GetObject("palette", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap picture_save {
            get {
                object obj = ResourceManager.GetObject("picture_save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap resultset_next {
            get {
                object obj = ResourceManager.GetObject("resultset_next", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap resultset_previous {
            get {
                object obj = ResourceManager.GetObject("resultset_previous", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap shape_rotate_anticlockwise {
            get {
                object obj = ResourceManager.GetObject("shape_rotate_anticlockwise", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap shape_rotate_clockwise {
            get {
                object obj = ResourceManager.GetObject("shape_rotate_clockwise", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!doctype html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///	&lt;head&gt;
        ///	&lt;meta charset=&quot;utf-8&quot;&gt;
        ///	&lt;title&gt;&lt;/title&gt;
        ///	&lt;style&gt;
        ///		* {
        ///			font-family: Verdana,Geneva,sans-serif; 
        ///		}
        ///
        ///		ul  {
        ///			 margin-left: 0px;
        ///			 padding-left: 2em;
        ///		}
        ///	&lt;/style&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///		&lt;b&gt;⚠️ Warnings:&lt;/b&gt;
        ///		&lt;ul&gt;
        ///			&lt;li&gt;You must check manually if every image in sprite is divisible by 8.&lt;/li&gt;
        ///			&lt;li&gt;HL sprites support only images with max. 256 colors, try to use 8bpp BMP files.&lt;/li&gt;
        ///		&lt;/ul&gt;
        ///
        ///		&lt;b&gt;💡 Tips:&lt;/b&gt;
        ///		&lt;ul&gt;
        ///			&lt;li&gt;You can use tra [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sprite_help_text {
            get {
                return ResourceManager.GetString("sprite_help_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap texture_tools_about {
            get {
                object obj = ResourceManager.GetObject("texture_tools_about", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!doctype html&gt;
        ///&lt;html lang=&quot;en&quot;&gt;
        ///	&lt;head&gt;
        ///	&lt;meta charset=&quot;utf-8&quot;&gt;
        ///	&lt;title&gt;&lt;/title&gt;
        ///	&lt;style&gt;
        ///		* {
        ///			font-family: Verdana,Geneva,sans-serif; 
        ///		}
        ///
        ///		ul  {
        ///			 margin-left: 0px;
        ///			 padding-left: 2em;
        ///		}
        ///	&lt;/style&gt;
        ///	&lt;/head&gt;
        ///	&lt;body&gt;
        ///		&lt;b&gt;⚠️ Warnings:&lt;/b&gt;
        ///		&lt;ul&gt;
        ///			&lt;li&gt;You must check manually if every image in WAD  is divisible by 8.&lt;/li&gt;
        ///			&lt;li&gt;HL WAD support only images with max. 256 colors, try to use 8bpp BMP files or you can use any image file format but it will be converted into 8bpp.&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string wad_help_text {
            get {
                return ResourceManager.GetString("wad_help_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap zoom_in {
            get {
                object obj = ResourceManager.GetObject("zoom_in", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap zoom_out {
            get {
                object obj = ResourceManager.GetObject("zoom_out", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
